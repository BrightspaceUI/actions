name: vdiff
description: Run your vdiff tests, upload a report and open a PR with the new goldens as necessary
inputs:
  aws-access-key-id:
    description: Access key id for the role that will assume the vdiff role
    required: true
  aws-secret-access-key:
    description: Access key secret for the role that will assume the vdiff role
    required: true
  aws-session-token:
    description: Session token for the role that will assume the vdiff role
    required: true
  github-token:
    description: Token used to cleanup branches and open the goldens PR
    required: true
  test-chrome:
    description: Run vdiff tests in Chromium
    default: false
  test-config:
    description: d2l-test-runner config location
  test-files:
    description: Pattern of vdiff tests to run
  test-firefox:
    description: Run vdiff tests in Firefox
    default: false
  test-safari:
    description: Run vdiff tests in Webkit
    default: false
  test-timeout:
    description: Timeout threshold for vdiff tests (in ms)
  vdiff-branch-prefix:
    description: Prefix for vdiff branches
    default: 'ghworkflow/vdiff'
runs:
  using: composite
  steps:
    - name: Get Run Info
      id: run-info
      run: |
        echo -e "\e[34mGetting Run Info"
        if [ ${{ github.event.number }} ]; then
          ORIGINAL_SHA=${{ github.event.pull_request.head.sha }}
        else
          ORIGINAL_SHA=${GITHUB_SHA}
        fi
        echo "original-sha=${ORIGINAL_SHA}" >> ${GITHUB_OUTPUT}
      env:
        FORCE_COLOR: 3
      shell: bash

    - name: vdiff Branch Cleanup
      uses: Brightspace/third-party-actions@actions/github-script
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          console.log('\x1b[34mCleaning Up Orphaned vdiff Branches');
          const branchPrefix = `${process.env.PREFIX}-pr-`;

          const vdiffBranches = await github.rest.git.listMatchingRefs({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `heads/${branchPrefix}`
          });

          for (let i = 0; i < vdiffBranches.data.length; i++) {
            const branch = vdiffBranches.data[i].ref;
            const prNum = branch.slice(branch.lastIndexOf('-') + 1);

            let prInfo,
              prOpen = true;
            try {
              prInfo = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNum
              });
        
              if (prInfo.data.state !== 'open') {
                prOpen = false;
              }
            } catch (e) {
              console.log(`\x1b[31m${e}`);
              console.log(`\x1b[31mCould not get details for PR #${prNum} - skipping branch ${branch}.`);
              continue;
            }

            if (!prOpen) {
              console.log(`PR #${prNum} is no longer open - deleting branch ${branch}.\n`);
              try {
                await github.rest.git.deleteRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: branch.substring(5)
                });
              } catch (e) {
                console.log(`\x1b[31m${e}`);
                console.log(`\x1b[31mCould not delete branch ${branch}.`);
              }
            }
          }
          console.log('Done processing vdiff branches.\n');
      env:
        FORCE_COLOR: 3
        PREFIX: ${{ inputs.vdiff-branch-prefix }}

    - name: Move Current Goldens
      run: |
        echo -e "\e[34mMoving Current Goldens to .vdiff"
        echo "Clearing .vdiff directory"
        rm -rf .vdiff

        echo "Moving current goldens to .vdiff directory"
        find . -name golden -type d | while read GOLDEN_DIR; do
          TEST_PATH=`dirname "${GOLDEN_DIR}"`
          TEST_PATH=${TEST_PATH:2}
          for TEST in `ls "${GOLDEN_DIR}"`; do
            mkdir -p "./.vdiff/${TEST_PATH}/${TEST}/golden"
            mv "${GOLDEN_DIR}/${TEST}/"* "./.vdiff/${TEST_PATH}/${TEST}/golden"
          done
        done
      env:
        FORCE_COLOR: 3
      shell: bash

    - name: Run vdiff Tests
      id: test-run
      run: |
        echo -e "\e[34mRunning vdiff Tests"
        if [[ ${FILES} != "" ]]; then FLAGS="--files ${FILES} "; fi
        if [[ ${TIMEOUT} != "" ]]; then FLAGS="${FLAGS}--timeout ${TIMEOUT} "; fi
        if [[ ${CHROME} == "true" ]]; then FLAGS="${FLAGS}--chrome "; fi
        if [[ ${FIREFOX} == "true" ]]; then FLAGS="${FLAGS}--firefox "; fi
        if [[ ${SAFARI} == "true" ]]; then FLAGS="${FLAGS}--safari "; fi
        if [[ ${CONFIG} != "" ]]; then FLAGS="${FLAGS}--config ${CONFIG}"; fi

        npx d2l-test-runner vdiff ${FLAGS} && echo "passed=true" >> ${GITHUB_OUTPUT} || echo "passed=false" >> ${GITHUB_OUTPUT}
      env:
        CHROME: ${{ inputs.test-chrome }}
        CONFIG: ${{ inputs.test-config }}
        FILES: ${{ inputs.test-files }}
        FIREFOX: ${{ inputs.test-firefox }}
        FORCE_COLOR: 3
        SAFARI: ${{ inputs.test-safari }}
        TIMEOUT: ${{ inputs.test-timeout }}
      shell: bash

    - name: Prepare Report
      id: prepare-report
      if: ${{ inputs.aws-access-key-id }}
      continue-on-error: true
      run: |
        echo -e "\e[34mPreparing vdiff Report"
        mv "./.vdiff/.report/" "./.vdiff/report/"

        DATE_TIME=$(date '+%Y-%m-%d_%H-%M-%S');
        UPLOAD_PATH="${{ github.repository }}/${ORIGINAL_SHA}/${DATE_TIME}"
        echo "upload-path=${UPLOAD_PATH}" >> ${GITHUB_OUTPUT}
      env:
        FORCE_COLOR: 3
        ORIGINAL_SHA: ${{ steps.run-info.outputs.original-sha }}
      shell: bash

    - name: Assume vdiff Role for Uploading Report
      if: ${{ inputs.aws-access-key-id }}
      continue-on-error: true
      uses: Brightspace/third-party-actions@aws-actions/configure-aws-credentials
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-session-token: ${{ inputs.aws-session-token }}
        role-to-assume: "arn:aws:iam::037018655140:role/visual-diff-githubactions-access"
        role-duration-seconds: 3600
        aws-region: ca-central-1

    - name: Upload Report
      id: upload-report
      if: ${{ inputs.aws-access-key-id }}
      continue-on-error: true
      uses: BrightspaceUI/actions/publish-to-s3@main
      with:
        bucket-path: s3://visual-diff.d2l.dev/reports/${{ steps.prepare-report.outputs.upload-path }}/
        cache-default: --cache-control max-age=120
        publish-directory: ./.vdiff/

    - name: Move New Goldens
      run: |
        echo -e "\e[34mMoving New Goldens to Proper Directories"

        echo "Moving passed screenshots back to golden directories"
        find ./.vdiff -name pass -type d | while read PASS_DIR; do
          DIR=`dirname "${PASS_DIR}"`
          TEST_PATH=`dirname "${DIR}"`
          TEST_PATH=${TEST_PATH:9}
          TEST=`basename "${DIR}"`

          mkdir -p "./${TEST_PATH}/golden/${TEST}"
          mv "${PASS_DIR}/"* "./${TEST_PATH}/golden/${TEST}"    
        done
        
        echo "Moving failed screenshots to golden directories"
        find ./.vdiff -name fail -type d | while read FAIL_DIR; do
          DIR=`dirname "${FAIL_DIR}"`
          TEST_PATH=`dirname "${DIR}"`
          TEST_PATH=${TEST_PATH:9}
          TEST=`basename "${DIR}"`
        
          for BROWSER in `ls "${FAIL_DIR}"`; do
            mkdir -p "./${TEST_PATH}/golden/${TEST}/${BROWSER}"
            for PNG in `ls "${FAIL_DIR}/${BROWSER}"`; do
              NAME=`basename "${PNG}"`
              if  [[ ${NAME} != *"-diff.png" ]] && [[ ${NAME} != *"-resized-golden.png" ]] && [[ ${NAME} != *"-resized-screenshot.png" ]]; then
                mv "${FAIL_DIR}/${BROWSER}/${PNG}" "./${TEST_PATH}/golden/${TEST}/${BROWSER}/${PNG}"
              fi
            done
          done
        done

        echo "Clearing .vdiff directory"
        rm -rf .vdiff
      env:
        FORCE_COLOR: 3
      shell: bash
