name: Publish to S3
description: Publishes the specified directory using aws s3 sync

inputs:
  bucket-path:
    description: The full path of your bucket, including subdirectories, to which to publish
    required: true
  publish-directory:
    description: The directory within your repo to publish to S3 (e.g. "./build/")
    required: true
  cache:
    description: An optional comma-separated list of all file extensions you wish to have cached for 1 year (e.g. "js,css")
    default: ""
    required: false
  cache-default:
    description: An optional default caching policy to apply to all files (e.g. "--cache-control max-age=120")
    default: ""
    required: false

runs:
  using: composite
  steps:
    - name: Parse files
      id: parse-files
      run: |
        typesToCompress=("html" "css" "js" "json" "svg" "xml")
        typesToCache=(${CACHE//,/ })

        compressAndCache=""
        compressOnly=""
        cacheOnly=""
        neither=""

        for type in ${typesToCompress[@]}; do
          if [[ " ${typesToCache[*]} " =~ " ${type} " ]]; then
            compressAndCache+="--include *.${type} "
          else
            compressOnly+="--include *.${type} "
          fi
          neither+="--exclude *.${type} "
        done

        for type in ${typesToCache[@]}; do
          if [[ ! " ${typesToCompress[*]} " =~ " ${type} " ]]; then
            cacheOnly+="--include *.${type} "
            neither+="--exclude *.${type} "
          fi
        done

        echo "compress-and-cache=$compressAndCache" >> $GITHUB_OUTPUT
        echo "compress-only=$compressOnly" >> $GITHUB_OUTPUT
        echo "cache-only=$cacheOnly" >> $GITHUB_OUTPUT
        echo "default=$neither" >> $GITHUB_OUTPUT
      env:
        CACHE: ${{ inputs.cache }}
      shell: bash

    - name: Compress
      run: find $PUBLISH_DIRECTORY \( -iname '*.html' -o -iname '*.css' -o -iname '*.js' -o -iname '*.json' -o -iname '*.svg' -o -iname '*.xml' \) -exec brotli {} \; -exec mv {}.br {} \;
      env:
        PUBLISH_DIRECTORY: ${{ inputs.publish-directory }}
      shell: bash

    - name: Deploy
      run: |
        # Disable globbing: We want arguments like '*.js' to be treated as string literals, without needing quotes
        # (Passing quotes in strings does not work as expected during shell expansion)
        set -f

        [[ $FILES_COMPRESS_AND_CACHE ]] && aws s3 sync --delete "$PUBLISH_DIRECTORY" "$BUCKET_PATH" $COMPRESS_ENCODING $CACHE_POLICY --exclude *.* $FILES_COMPRESS_AND_CACHE
        [[ $FILES_COMPRESS_ONLY ]] && aws s3 sync --delete "$PUBLISH_DIRECTORY" "$BUCKET_PATH" $COMPRESS_ENCODING $CACHE_DEFAULT --exclude *.* $FILES_COMPRESS_ONLY
        [[ $FILES_CACHE_ONLY ]] && aws s3 sync --delete "$PUBLISH_DIRECTORY" "$BUCKET_PATH" $CACHE_POLICY --exclude *.* $FILES_CACHE_ONLY
        aws s3 sync --delete "$PUBLISH_DIRECTORY" "$BUCKET_PATH" $CACHE_DEFAULT $FILES_DEFAULT
      env:
        BUCKET_PATH: ${{ inputs.bucket-path }}
        PUBLISH_DIRECTORY: ${{ inputs.publish-directory }}
        CACHE_POLICY: --cache-control public,max-age=31536000,immutable
        CACHE_DEFAULT: ${{ inputs.cache-default }}
        COMPRESS_ENCODING: --content-encoding br
        FILES_CACHE_ONLY: ${{ steps.parse-files.outputs.cache-only }}
        FILES_COMPRESS_AND_CACHE: ${{ steps.parse-files.outputs.compress-and-cache }}
        FILES_COMPRESS_ONLY: ${{ steps.parse-files.outputs.compress-only }}
        FILES_DEFAULT: ${{ steps.parse-files.outputs.default }}
      shell: bash
