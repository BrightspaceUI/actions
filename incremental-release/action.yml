name: Incremental Release
description: Create a release based on increment keywords in the most recent commit message
inputs:
  DEFAULT_INCREMENT:
    description: Default increment if no value is found
    default: skip
  DRY_RUN:
    description: Simulates a release but does not actually do one
    default: false
  GITHUB_TOKEN:
    description: Token to use to update version in 'package.json' and create the tag
    required: true
outputs:
  VERSION:
    description: Version of the new release
    value: ${{ steps.increment-version.outputs.version }}
runs:
  using: composite
  steps:
    - name: Install Dependencies
      run: |
        if [ ${{ !contains(github.event.head_commit.message, 'skip ci') }} == true ]; then
          echo "Installing dependencies..."
          npm install @octokit/rest@18 --prefix ${{ github.action_path }} --no-save --loglevel error
        fi
      shell: bash
    - name: Determine Increment
      id: determine-increment
      run: |
        TYPE=${{ inputs.DEFAULT_INCREMENT }}
        if [ ${{ contains(github.event.head_commit.message, 'skip ci') }} == true ]; then
          echo "[skip ci] detected, so skipping release."
          TYPE="skip"
        elif [ ${{ contains(github.event.head_commit.message, '[increment patch]') }} == true ]; then
          echo "Found [increment patch], creating a patch release..."
          TYPE="patch"
        elif [ ${{ contains(github.event.head_commit.message, '[increment minor]') }} == true ]; then
          echo "Found [increment minor], creating a minor release..."
          TYPE="minor"
        elif [ ${{ contains(github.event.head_commit.message, '[increment major]') }} == true ]; then
          echo "Found [increment major], creating a major release..."
          TYPE="major"
        elif [ ${{ contains(github.event.head_commit.message, '[skip version]') }} == true ]; then
          echo "Found [skip version], skipping release..."
          TYPE="skip"
        else
          echo "Did not find commit message flag, using DEFAULT_INCREMENT (${{ inputs.DEFAULT_INCREMENT }})"
        fi
        echo "::set-output name=increment::$(echo "$TYPE")"
      shell: bash
    - name: Increment Version
      id: increment-version
      run: |
        if [ ${{ steps.determine-increment.outputs.increment }} == "skip" ]; then
          exit 0;
        fi

        git config user.name github-actions[bot]
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

        echo "Executing: \"npm version ${{ steps.determine-increment.outputs.increment }}\"..."
        NEW_VERSION=$(npm version ${{ steps.determine-increment.outputs.increment }} -m "Updated version to %s [skip ci][skip version]" | cut -dv -f2)
        echo "New version number will be: $NEW_VERSION"

        if [ ${{ inputs.DRY_RUN }} == false ]; then
          echo "Not a dry run, pushing..."
          echo "::set-output name=version::$(echo "$NEW_VERSION")"
          git push --follow-tags --repo=https://${{ inputs.GITHUB_TOKEN }}@github.com/${{ github.repository }}
        fi
      shell: bash
    - name: Create Release
      run: |
        if [ ${{ steps.determine-increment.outputs.increment }} == "skip" ]; then
          exit 0;
        fi
        if [ ${{ inputs.DRY_RUN }} == true ]; then
          echo "DRY_RUN option specified, skipping release creation."
          exit 0;
        fi
        node ${{ github.action_path }}/create-release.js ${{ steps.increment-version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      shell: bash
