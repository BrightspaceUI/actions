name: Update package-lock.json
description: Opens a pull request with an updated package-lock.json
inputs:
  APPROVAL_TOKEN:
    description: Token for automatically approving the PR (will skip if not provided)
  AUTO_MERGE_METHOD:
    description: Merge method to use when enabling auto-merge
    default: merge
  AUTO_MERGE_TOKEN:
    description: Token for enabling auto-merge for the PR (will skip if not provided)
  BRANCH_NAME:
    description: Name of the branch for the PR
    default: ghworkflow/package_lock_auto_update
  COMMIT_MESSAGE:
    description: Commit message for the update
    default: 'Auto Update Dependencies'
  DEFAULT_BRANCH:
    description: Name of the default release branch
    default: main
  GITHUB_TOKEN:
    description: Token for opening the pull request
    required: true
  NODE_AUTH_TOKEN:
    description: Token for reading packages from already setup private registry
  PR_TITLE:
    description: Title for the opened pull request
    default: 'Updating package-lock.json'
  SLACK_CHANNEL_FAILURE:
    description: Slack channel to send action failures to (will skip if not provided)
  SLACK_CHANNEL_STALE_PR:
    description: Slack channel to send stale PR warnings to (will skip if not provided)
  SLACK_TOKEN:
    description: Slack token for enabling slack notifications (will skip if not provided)
  WORKING_DIRECTORY:
    description: Path where you want to execute the update action
    default: '.'
runs:
  using: composite
  steps:
      - name: Save Initial Dependencies
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo -e "\e[34mSaving Initial Dependencies"
          npm ci
          npm ls --json --package-lock-only --all > "$RUNNER_TEMP/dependencies-before.json"
        shell: bash
      - name: Install Dependencies
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo -e "\e[34mInstalling Dependencies"
          npm install chalk@5 @octokit/graphql@4 @actions/core@1 --prefix ${{ github.action_path }} --no-save --loglevel error
        shell: bash
      - name: Checkout Branch
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo -e "\e[34mFetching Branch"
          git fetch -n origin +refs/heads/${{ inputs.BRANCH_NAME }}:refs/heads/${{ inputs.BRANCH_NAME }} || true
          echo -e "\n\e[34mChecking Out Branch"
          git checkout ${{ inputs.BRANCH_NAME }} || git checkout -b ${{ inputs.BRANCH_NAME }}
        shell: bash
      - name: Fresh Dependency Install
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo -e "\n\e[34mRunning Fresh Dependency Install"
          rm -rf ./node_modules
          rm package-lock.json
          npm install
        env:
          NODE_AUTH_TOKEN: ${{ inputs.NODE_AUTH_TOKEN }}
        shell: bash
      - name: Check For Changes
        id: check-for-changes
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          echo -e "\n\e[34mChecking For Changes"
          git diff --exit-code package-lock.json && echo "changes-exist=false" >> $GITHUB_OUTPUT || echo "changes-exist=true" >> $GITHUB_OUTPUT
        shell: bash
      - name: Create Commit
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          if [ ${{ steps.check-for-changes.outputs.changes-exist }} == false ]; then
            echo -e "\n\e[32mNo changes to commit."
            exit 0;
          fi

          echo -e "\n\e[34mCommitting Changes"
          git reset --hard origin/${{ inputs.DEFAULT_BRANCH }}
          rm -rf ./node_modules
          rm package-lock.json
          npm install
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add package-lock.json
          git commit -m '${{ inputs.COMMIT_MESSAGE }}'
          git push --force https://${GITHUB_TOKEN}@github.com/${{ github.repository }} ${{ inputs.BRANCH_NAME }}

          echo -e "\e[34mSaving New Dependencies"
          npm ls --json --package-lock-only --all > "$RUNNER_TEMP/dependencies-after.json"
        env:
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ inputs.NODE_AUTH_TOKEN }}
        shell: bash
      - name: Create PR (if necessary)
        id: create-pr
        working-directory: ${{ inputs.WORKING_DIRECTORY }}
        run: |
          if [ ${{ steps.check-for-changes.outputs.changes-exist }} == false ]; then
            echo -e "\n\e[32mBuild Complete."
            exit 0;
          fi

          echo -e "\n\e[34mCreating PR"
          node ${{ github.action_path }}/handle-pr.js
          echo -e "\n\e[32mBuild Complete."
        env:
          APPROVAL_TOKEN: ${{ inputs.APPROVAL_TOKEN }}
          AUTO_MERGE_METHOD: ${{ inputs.AUTO_MERGE_METHOD }}
          AUTO_MERGE_TOKEN: ${{ inputs.AUTO_MERGE_TOKEN }}
          BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
          DEFAULT_BRANCH: ${{ inputs.DEFAULT_BRANCH }}
          FORCE_COLOR: 3
          GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
          PR_TITLE: ${{ inputs.PR_TITLE }}
        shell: bash
      - name: Notify Slack About Stale PR (if necessary)
        if: ${{ steps.create-pr.outputs.stale == 'true' && inputs.SLACK_CHANNEL_STALE_PR != '' && inputs.SLACK_TOKEN != '' }}
        uses: Brightspace/third-party-actions@slackapi/slack-github-action
        with:
          channel-id: ${{ env.CHANNEL }}
          payload: >
            {
              "username": "Stale update-package-lock PR",
              "icon_emoji": ":update-package-lock:",
              "unfurl_media": false,
              "unfurl_links": false,
              "text": ":warning: ${{ github.repository }} -> PR #${{ env.PR_NUM }} (${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUM }}) to update the package-lock.json file has been open for more than 3 days.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: `${{ github.repository }}` -> <${{ github.server_url }}/${{ github.repository }}/pull/${{ env.PR_NUM }}|PR #${{ env.PR_NUM }}> to update the `package-lock.json` file has been open for more than 3 days."
                  }
                }
              ]
            }
        env:
          CHANNEL: ${{ inputs.SLACK_CHANNEL_STALE_PR }}
          PR_NUM: ${{ steps.create-pr.outputs.pr-num }}
          SLACK_BOT_TOKEN: ${{ inputs.SLACK_TOKEN }}
      - name: Notify Slack About Workflow Failure
        if: ${{ failure() && inputs.SLACK_CHANNEL_FAILURE != '' && inputs.SLACK_TOKEN != '' }}
        uses: Brightspace/third-party-actions@slackapi/slack-github-action
        with:
          channel-id: ${{ env.CHANNEL }}
          payload: >
            {
              "username": "update-package-lock Issue",
              "icon_emoji": ":update-package-lock:",
              "unfurl_media": false,
              "unfurl_links": false,
              "text": ":fire: ${{ github.repository }} -> Update failed for ${{ github.event_name }} trigger (run attempt ${{ github.run_attempt }}). See ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} for details.",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":fire: `${{ github.repository }}` -> Update failed for `${{ github.event_name }}` trigger (run attempt ${{ github.run_attempt }}). See the <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|run logs> for details."
                  }
                }
              ]
            }
        env:
          CHANNEL: ${{ inputs.SLACK_CHANNEL_FAILURE }}
          SLACK_BOT_TOKEN: ${{ inputs.SLACK_TOKEN }}
